{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","location","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","Object","assign","scale","display","date","dangerouslySetInnerHTML","__html","html","_components_bio__WEBPACK_IMPORTED_MODULE_3__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"oNAQMA,kLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7CC,EAGoBR,KAAKC,MAAMQ,YAA9BC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KACGX,KAAKC,MAAMW,SAAxBC,SACR,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQL,SAAUZ,KAAKC,MAAMW,SAAUL,MAAOH,GAC9CU,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIX,MAAOR,EAAKoB,YAAYZ,MACxBa,YAAarB,EAAKsB,UAEpBP,EAAAC,EAAAC,cAAA,MACEM,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGf1B,EAAKoB,YAAYZ,OAEpBO,EAAAC,EAAAC,cAAA,KACEM,MAAKI,OAAAC,OAAA,GACAC,aAAM,IADN,CAEHC,QAAO,QACPJ,aAAcD,YAAO,MAGtBzB,EAAKoB,YAAYW,MAEpBhB,EAAAC,EAAAC,cAAA,OAAKe,wBAAyB,CAAEC,OAAQjC,EAAKkC,QAC7CnB,EAAAC,EAAAC,cAAA,MACEM,MAAO,CACLG,aAAcD,YAAO,MAGzBV,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MACApB,EAAAC,EAAAC,cAAA,MACEM,MAAO,CACLG,aAAcD,YAAO,MAGzBV,EAAAC,EAAAC,cAAA,MACEM,MAAO,CACLO,QAAO,OACPM,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGXxB,EAAAC,EAAAC,cAAA,UACGN,GACCI,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,GAAI9B,EAAS+B,OAAOC,KAAMC,IAAI,QAApC,KACKjC,EAASS,YAAYZ,QAI9BO,EAAAC,EAAAC,cAAA,UACGL,GACCG,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,GAAI7B,EAAK8B,OAAOC,KAAMC,IAAI,QAC7BhC,EAAKQ,YAAYZ,MADpB,aA3DiBqC,IAAMC,WAsEtBhD,YAER,IAAMiD,EAAS","file":"component---src-templates-blog-post-js-3255c5b6bdc52e892ed9.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    const { pathname } = this.props.location\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n      <SEO\n          title={post.frontmatter.title}\n          description={post.excerpt}\n        />\n        <h1\n          style={{\n            marginTop: rhythm(1),\n            marginBottom: 0,\n          }}\n        >\n          {post.frontmatter.title}\n        </h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}